[package]
readme = "An air quality monitor using the ENS160 AQ sensor and AHT21 temperature/humidity sensor, with a display."
name = "air-quality-monitor"
authors = ["rafael <rafael.koch@gmx.net>"]
description = "An air quality monitor using the ENS160 AQ sensor and AHT21 temperature/humidity sensor, with a display."
version = "0.1.0"
edition = "2024"
license = "MIT OR Apache-2.0"
repository = "https://github.com/1-rafael-1/air-quality-monitor"
keywords = ["ens160", "aht21", "air quality", "monitor"]
categories = ["embedded", "no-std", "async"]

[profile.dev]
lto = true
codegen-units = 1
debug = 2
debug-assertions = true
incremental = true
opt-level = 0

[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = true
lto = 'fat'
opt-level = 's'

[dependencies]
embassy-rp = { version = "0.4.0", features = [
    "defmt",
    "unstable-pac",
    "time-driver",
    "critical-section-impl",
    "rp235xa",
] }
embassy-embedded-hal = { version = "0.3.0", features = ["defmt"] }
embassy-executor = { version = "0.7.0", features = [
    "arch-cortex-m",
    "executor-thread",
    "executor-interrupt",
    "defmt",
] }
embassy-time = { version = "0.4.0", features = [
    "defmt",
    "defmt-timestamp-uptime",
] }
embassy-sync = { version = "0.7.0", features = ["defmt"] }
embassy-futures = { version = "0.1.1", features = ["defmt"] }
defmt = "1.0.1"
defmt-rtt = "1.0.0"
cortex-m-rt = "0.7.5"
critical-section = "1.2.0"
panic-probe = { version = "1.0.0", features = ["print-defmt"] }
ens160-aq = { version = "0.2.10", features = ["async"] }
aht20-async = "1.0.0"
static_cell = "2.1.0"
moving_median = "0.3.0"
heapless = "0.8.0"
embedded-graphics = "0.8.1"
ssd1306-async = { git = "https://github.com/kalkyl/ssd1306-async" }
tinybmp = "0.6.0"

[patch.crates-io]
embassy-rp = { git = "https://github.com/embassy-rs/embassy", branch = "main" }
embassy-embedded-hal = { git = "https://github.com/embassy-rs/embassy", branch = "main" }
embassy-executor = { git = "https://github.com/embassy-rs/embassy", branch = "main" }
embassy-time = { git = "https://github.com/embassy-rs/embassy", branch = "main" }
embassy-sync = { git = "https://github.com/embassy-rs/embassy", branch = "main" }
embassy-futures = { git = "https://github.com/embassy-rs/embassy", branch = "main" }


[lints.clippy]
# Enable all main clippy lints (with lower priority so individual lints can override)
all = { level = "warn", priority = 1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Deny specific lints (treat as errors) - these have priority 0 and will override the groups above
unwrap_used = "deny"
expect_used = "deny"

# Warn on specific lints
panic = "warn"
missing_docs_in_private_items = "warn"
cargo_common_metadata = "warn"

# Allow specific lints
future_not_send = "allow" # embassy tasks are not Send
multiple_crate_versions = "allow" # not worth the effort, we get a minimal binary size increase that does not matter here 
